// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vue.Core.Data;

namespace Vue.Core.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190917161002_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Vue.Core.Data.Entities.Apps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ParentId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.AppsApiCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AppsId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<int>("Hits");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RoutePath");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("AppsId");

                    b.ToTable("AppsApiCollection");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Clinics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClinicName")
                        .HasMaxLength(20);

                    b.Property<string>("ClinicNo")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("SchedulerId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("SchedulerId");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PatientsId");

                    b.Property<int>("SchedulerId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("PatientsId");

                    b.HasIndex("SchedulerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Patients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<int>("Gender");

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("NationalId")
                        .HasMaxLength(30);

                    b.Property<string>("PatientId")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("Lock");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.RolesApps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AppsId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<bool>("Delete");

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("Print");

                    b.Property<bool>("Read");

                    b.Property<int?>("RolesId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.Property<bool>("Write");

                    b.HasKey("Id");

                    b.HasIndex("AppsId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolesApps");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Scheduler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<string>("EndTime")
                        .HasMaxLength(5);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Max");

                    b.Property<string>("StartTime")
                        .HasMaxLength(5);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Scheduler");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<int>("Gender");

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("LoginName")
                        .HasMaxLength(20);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.UsersRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30);

                    b.Property<Guid>("Gid");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("RolesId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(30);

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.HasIndex("UsersId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.AppsApiCollection", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Apps", "Apps")
                        .WithMany("AppsApiCollection")
                        .HasForeignKey("AppsId");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Clinics", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Scheduler", "Scheduler")
                        .WithMany("Clinics")
                        .HasForeignKey("SchedulerId");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Order", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Patients", "Patients")
                        .WithMany("Order")
                        .HasForeignKey("PatientsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vue.Core.Data.Entities.Scheduler", "Scheduler")
                        .WithMany()
                        .HasForeignKey("SchedulerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.RolesApps", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Apps", "Apps")
                        .WithMany("RolesApps")
                        .HasForeignKey("AppsId");

                    b.HasOne("Vue.Core.Data.Entities.Roles", "Roles")
                        .WithMany("RolesApps")
                        .HasForeignKey("RolesId");
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.Scheduler", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Users", "Users")
                        .WithMany("Scheduler")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vue.Core.Data.Entities.UsersRoles", b =>
                {
                    b.HasOne("Vue.Core.Data.Entities.Roles", "Roles")
                        .WithMany("UsersRoles")
                        .HasForeignKey("RolesId");

                    b.HasOne("Vue.Core.Data.Entities.Users", "Users")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UsersId");
                });
#pragma warning restore 612, 618
        }
    }
}
